/* This is the prototype for ASSIGNMENT 1 FOR COMP20007
   Student Number: 828472
   Modules List, Queues and Stack make use of code provided by Matt Farrugia
   */

#include <stdio.h>
#include "traverse.h"
#include "queue.h"
#include "stack.h"


void print_dfs(Graph* graph, int source_id) {
	/*
	Create a stack
	Create a new choice point
	Push the choice point onto the stack
	while (not found and stack is not empty)
		Pop the stack
		Find all possible choices after the last one tried
		Push these choices onto the stack
	Return
	*/
	
	//DECLARATION AND INITIALISATION
	Stack *tmp_stk;
	
	
	
	tmp_stk = new_stack();
	
	printf("PRINT OUTPUT LAST\n");
}

void print_bfs(Graph* graph, int source_id) {
	printf("not yet implemented: put code for part 2 here\n");
}

void detailed_path(Graph* graph, int source_id, int destination_id) {
	printf("not yet implemented: put code for part 3 here\n");
}

void all_paths(Graph* graph, int source_id, int destination_id) {
	printf("not yet implemented: put code for part 4 here\n");
}

void shortest_path(Graph* graph, int source_id, int destination_id) {
	printf("not yet implemented: put code for part 5 here\n");
}
